# How to Run the Trading Backtester Program

To run the trading backtester application, follow these steps:

## Prerequisites
Make sure you have the following installed:
- Java Development Kit (JDK) 11 or higher
- Apache Maven

## Step 1: Setup the Project
1. Clone or download all the files to your local machine
2. Organize the files according to the package structure shown in the project structure document
3. Make sure the `pom.xml` file is in the root directory of your project

## Step 2: Compile and Run Using Maven
From the root directory of your project, run these commands in your terminal:

```bash
# Clean and compile the project
mvn clean compile

# Run the application using the JavaFX Maven plugin
mvn javafx:run
```

## Step 3: Compile and Run Using an IDE (Alternative)
Alternatively, you can import the project into an IDE like IntelliJ IDEA or Eclipse:

1. Import the project as a Maven project
2. Let the IDE resolve dependencies
3. Run the `Main` class located at `com.tradingbacktester.Main`

## Step 4: Using the Application
Once the application starts:

1. **Load Market Data**: Use the File â†’ Load Market Data menu option to load CSV files containing historical price data.
   - The CSV files should be formatted with columns for datetime, open, high, low, close, and volume.
   - Sample data is included in the `data` directory.

2. **Configure Strategy**: In the Strategy Configuration tab, select a trading strategy (Moving Average Crossover or RSI) and set parameters.

3. **Run Backtest**: Click the "Run Backtest" button to execute the backtest with the selected strategy and parameters.

4. **Analyze Results**: After the backtest completes, explore the results in:
   - Charts tab - view price charts with indicators and trade entries/exits
   - Performance tab - analyze equity curve, monthly returns, and trade statistics

## Troubleshooting

If you encounter errors:

1. **Missing dependencies**: Make sure Maven has properly downloaded all dependencies specified in the `pom.xml`.

2. **Java version issues**: Ensure you're using Java 11 or higher.

3. **File path problems**: Check that the data directory structure is correctly set up.

4. **JavaFX issues**: If JavaFX doesn't load correctly, verify that the JavaFX dependencies are correctly specified in the `pom.xml` and that your Java installation includes JavaFX.

5. **Memory limitations**: For large datasets, you might need to increase JVM memory with the `-Xmx` flag, e.g.: 
   ```bash
   mvn javafx:run -Djavafx.run.jvmArgs="-Xmx2g"
   ```
